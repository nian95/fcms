<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="" updateCheck="false">
	<diskStore path="java.io.tmpdir" />
		<!--
	       maxElementsInMemory：缓存中允许创建的最大对象数
	       eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
	       timeToIdleSeconds：缓存数据空闲的最大时间，也就是说如果有一个缓存有多久没有被访问就会被销毁， 如果该值是 0 就意味着元素可以停顿无穷长的时间。
	       timeToLiveSeconds：缓存数据存活的时间，缓存对象最大的的存活时间，超过这个时间就会被销毁， 这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
	       overflowToDisk：配置此属性，当内存中Element数量达到maxElementsInMemory时，Ehcache将会Element写到磁盘中。
	       memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
	       maxElementsOnDisk 磁盘中最大缓存对象数，若是0表示无穷大
	       diskPersistent是否缓存虚拟机重启期数据
	       diskExpiryThreadIntervalSeconds磁盘失效线程运行时间间隔，默认是120秒
	       diskSpoolBufferSizeMB这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区
	       memoryStoreEvictionPolicy当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）

		    replicatePuts=true | false – 当一个新元素增加到缓存中的时候是否要复制到其他的peers. 默认是true。
			replicateUpdates=true | false – 当一个已经在缓存中存在的元素被覆盖时是否要进行复制。默认是true。
			replicateRemovals= true | false – 当元素移除的时候是否进行复制。默认是true。
			replicateAsynchronously=true | false – 复制方式是异步的（指定为true时）还是同步的（指定为false时）。默认是true。
			replicatePutsViaCopy=true | false – 当一个新增元素被拷贝到其他的cache中时是否进行复制指定为true时为复制，默认是true。
			replicateUpdatesViaCopy=true | false – 当一个元素被拷贝到其他的cache中时是否进行复制（指定为true时为复制），默认是true。
		-->

	<cache name="xxxCache" maxElementsInMemory="10000" eternal="true"
		timeToIdleSeconds="0" timeToLiveSeconds="0" overflowToDisk="true"
		maxElementsOnDisk="10000000" diskPersistent="false"
		diskExpiryThreadIntervalSeconds="120" memoryStoreEvictionPolicy="LRU">
	</cache>
</ehcache>
